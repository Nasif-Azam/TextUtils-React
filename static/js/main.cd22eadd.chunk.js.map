{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/ButtonGrp.js","components/TextArea.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","dist","aria-current","to","navItem1","navItem2","style","color","activeStyle","role","aria-checked","onClick","redMode","htmlFor","placeholder","toggleMode","label","Alert","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","ButtonGrp","one","two","three","four","five","six","TextArea","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","backgroundColor","_useState4","defaultContrast","newContrast","highContrast","handleOnChange","event","target","value","onChange","rows","upperText","showAlert","lowerText","split","map","eachWord","join","console","log","match","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","filter","ele","length","About","myStyle","aria-labelledby","data-bs-parent","defaultProps","App","setAlert","darkMode","setDarkMode","_useState5","_useState6","toDark","toLight","message","setTimeout","Fragment","body","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cd22eadd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\"> {props.title} </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.navItem1}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.navItem2}</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/buttons\" style={{ color: 'black' }} activeStyle={{ color: 'red' }}>Users</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className=\"form-check form-switch text-dark\">Red\r\n                        <input className=\"form-check-input bg-danger\" type=\"checkbox\" role=\"switch\" aria-checked id=\"flexSwitchCheckDefault\" onClick={props.redMode} />\r\n                        <label className=\"form-check-label bg-dark\" htmlFor=\"flexSwitchCheckDefault\"></label>\r\n                    </div>\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-info\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.label}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = ((word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    })\r\n    return (\r\n        <div style={{ height: '50px' }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport default function ButtonGrp(props) {\r\n    return (\r\n        <div className=\"btn-group my-3\" aria-label=\"\">\r\n            <button type=\"button\" className=\"btn btn-danger\">{props.one}</button>\r\n            <button type=\"button\" className=\"btn btn-warning\">{props.two}</button>\r\n            <button type=\"button\" className=\"btn btn-success\">{props.three}</button>\r\n            <button type=\"button\" className=\"btn btn-light\">{props.four}</button>\r\n            <button type=\"button\" className=\"btn btn-dark\">{props.five}</button>\r\n            <button type=\"button\" className=\"btn btn-primary\">{props.six}</button>\r\n        </div>\r\n    );\r\n}\r\nButtonGrp.propTypes = {\r\n    one: propTypes.string.isRequired,\r\n    two: propTypes.number\r\n}\r\nButtonGrp.defaultProps = {\r\n    one: 'One',\r\n    two: (2),\r\n    three: 'Three',\r\n    four: 'Four',\r\n    five: 'Five',\r\n    six: 'Six'\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const [text, setText] = useState('i am nasif azam');\r\n    const [defaultContrast, newContrast] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    });\r\n    const handleUpperCase = (() => {\r\n        let upperText = text.toUpperCase();\r\n        setText(upperText);\r\n        props.showAlert(\"Converted to upper case.\", \"success\");\r\n    });\r\n    const handleLowerCase = (() => {\r\n        let lowerText = text.toLowerCase();\r\n        setText(lowerText);\r\n        props.showAlert(\"Converted to lower case.\", \"success\");\r\n    });\r\n    const capitalized = (() => {\r\n        text.split(\" \").map(eachWord => eachWord[0].toUpperCase() + eachWord.slice(1)).join(\" \");\r\n        setText(text.split(\" \").map(eachWord => eachWord[0].toUpperCase() + eachWord.slice(1)).join(\" \"));\r\n        props.showAlert(\"Converted to capitalized.\", \"success\");\r\n        // text.join();\r\n    });\r\n    const clearText = (() => {\r\n        let clearText = '';\r\n        setText(clearText);\r\n        props.showAlert(\"Text cleared!!\", \"danger\");\r\n    });\r\n    const emailExtractor = (() => {\r\n        console.log(text.match(/[\\w]+@[\\w\\]+[\\w]{2,}/g) + \".com\");\r\n        props.showAlert(\"Email extracted\", \"info\");\r\n\r\n        // console.log(text.match(/[\\w]+@[\\w\\]+[\\w]{2,}/g));\r\n        // console.log((text.match(/[\\w]+@[\\w]{1,}/g + [\\w] + c[\\w]{ 1, } / c)));\r\n\r\n\r\n    });\r\n    const highContrast = (() => {\r\n        if (defaultContrast.color === 'black') {\r\n            newContrast({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            });\r\n        }\r\n        else {\r\n            newContrast({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            });\r\n        }\r\n    });\r\n    const copyText = (() => {\r\n        let text = document.getElementById(\"textAreaBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n    });\r\n    const handleExtraSpace = (() => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Remove extra spaces.\", \"warning\");\r\n    });\r\n    const handleOnChange = ((event) => {\r\n        setText(event.target.value);\r\n    });\r\n    return (\r\n        <div className='container my-3' style={{ color: props.mode === 'light' ? 'green' : 'red' }}>\r\n            <h1>Enter Text Below</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"textAreaBox\" rows=\"1\" style={defaultContrast}></textarea>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"textAreaBox\" rows=\"5\" style={{ backgroundColor: props.mode === 'light' ? 'white' : 'black', color: props.mode === 'light' ? 'black' : 'white' }}></textarea>\r\n            </div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" id='firstBtn' onClick={handleUpperCase}>Upper Case</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={handleLowerCase}>Lower Case</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={capitalized}>Capitalized Case</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={clearText}>Clear Text</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={emailExtractor}>Email Founder</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={highContrast}>High Contrast</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={copyText}>Copy Text</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}>Remove Extra Space</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={highContrast}>Sentance Case</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={highContrast}>Title Case</div>\r\n            <div className=\"btn btn-primary mx-2 my-2\" onClick={highContrast}>Inverse Case</div>\r\n            <h2 className='my-3'>Your Text Summary</h2>\r\n            <p>Words= {text.split(' ').filter((ele) => { return ele.length !== 0 }).length} & Charecter= {text.length} </p>\r\n            <p>Time to read = {0.008 * text.split(' ').filter((ele) => { return ele.length !== 0 }).length} Min </p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length > 0 ? text : 'Enter Somthing to Preview'}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [defaultStyle, newStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // });\r\n    // const [btnText, newBtnText] = useState(\"To Dark\");\r\n    // const [btnColor, btnNewColor] = useState({\r\n    //     color: 'white',\r\n    //     backgroundColor: 'black'\r\n    // });\r\n    // const toggleStyle = (() => {\r\n    //     if (defaultStyle.color === 'black' && btnColor.backgroundColor === 'black') {\r\n    //         newStyle({\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black'\r\n    //         });\r\n    //         newBtnText(\"To Light\");\r\n    //         btnNewColor({\r\n    //             color: 'black',\r\n    //             backgroundColor: 'white'\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         newStyle({\r\n    //             color: 'black',\r\n    //             backgroundColor: 'white'\r\n    //         });\r\n    //         newBtnText(\"To Dark\");\r\n    //         btnNewColor({\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black'\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? 'black' : 'white'\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion container my-3\" style={myStyle} id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div onClick={toggleStyle} className=\"btn my-3\" style={btnColor}>{btnText}</div> */}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport React from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport ButtonGrp from \"./components/ButtonGrp\";\nimport TextArea from \"./components/TextArea\";\nimport About from \"./components/About\";\nimport { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [darkMode, setDarkMode] = useState('light');\n  const [toDark, toLight] = useState('To Dark Mode');\n\n  const showAlert = ((message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  })\n  const toggleMode = (() => {\n    if (darkMode === 'light') {\n      setDarkMode('dark');\n      toLight('To Light Mode');\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n      // document.querySelector('#firstBtn').style.backgroundColor = 'red'\n      showAlert(\"Dark mood enabled\", \"success\");\n      document.title = \"Text Utils App Demo {Dark}\";\n      // setInterval(() => {\n      //   document.title = \"Text Utils is wow\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Istall Text Utils now\";\n      // }, 1500);\n\n    } else {\n      setDarkMode('light');\n      toLight('To Dark Mode');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      // document.querySelector('#firstBtn').style.backgroundColor = 'green'\n      showAlert(\"Light mood enabled\", \"success\");\n    }\n  })\n  const redMode = (() => {\n    document.body.style.backgroundColor = 'red';\n    document.body.style.color = 'white';\n  })\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Text Utils By Nasif\" navItem1=\"HOME\" navItem2=\"ABOUT\" mode={darkMode} redMode={redMode} toggleMode={toggleMode} label={toDark} />\n        <Alert alert={alert} />\n\n        <ButtonGrp one=\"1st Btn\" two={2} three=\"3rd Btn\" four=\"4th Btn\" five=\"5th Btn\" six=\"6th Btn\" />\n        <Routes>\n          {/* <Route path=\"/\">\n          <TextArea showAlert={showAlert} mode={darkMode} />\n          </Route> */}\n          <Route path='/' element={<TextArea showAlert={showAlert} mode={darkMode} />} />\n          {/* <Route path=\"/about\"><About /></Route> */}\n          <Route path=\"/about\" element={<About mode={darkMode} />} />\n          <Route path=\"/buttons\" element={<ButtonGrp />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}